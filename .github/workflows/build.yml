name: build

on: 
  workflow_dispatch:
    inputs:
      tag_date:
        description: 'tag date'     
        required: true

env:
  VERSION: 12.3-lkgr

jobs:
  build_windows_md:
    name: Windows-MD
    runs-on: windows-2019
    steps:
    - uses: actions/checkout@v2
    - name: Run build script
      shell: cmd
      run: |
        cd %GITHUB_WORKSPACE%
        call .\win64.cmd ${{env.VERSION}}
    - name: Rename
      shell: bash
      run: |
        mv v8/v8/output/v8 v8/v8/output/v12_4.254
    - uses: actions/upload-artifact@v2
      with:
        name: v8_bin
        path: v8/v8/output/**/*
      
  publish:
    runs-on: ubuntu-20.04
    needs: [build_windows_md]
    steps:
      - uses: actions/download-artifact@v1
        with:
          name: v8_bin
          path: v8_bin/
          
      - name: Create Release Asset
        run: |
          cd v8_bin/ && tar cvfz ../v8_bin_${{env.VERSION}}.tgz v12_4.254 && cd -
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: V8_${{env.VERSION}}_${{ github.event.inputs.tag_date }}
          release_name: V8_${{env.VERSION}}_${{ github.event.inputs.tag_date }}
          draft: false
          prerelease: false
          
      - name: Upload V8
        #id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./v8_bin_${{env.VERSION}}.tgz
          asset_name: v8_bin_${{env.VERSION}}.tgz
          asset_content_type: application/tgz
          
